//Reminder
//— Keywords and punctuation are in bold text.
//— Syntactic categories are named in non-bold text.
//— A vertical bar ( | ) separates alternatives.
//— Square brackets ( [ ] ) enclose optional items.
//— Braces ( { } ) enclose items which can be repeated zero or more times
// {} -> * [] -> ?

//used https://inst.eecs.berkeley.edu/~cs150/fa06/Labs/verilog-ieee.pdf as reference, this is verilog 2001

//A.1 Source Text
//A.1.1 Library source text #maybe_later
//A.1.2 Configuratino source text #maybe_later

//A.1.3 Module and primitive source text
source_text: description*
description: module_declaration
//    | udp_declaration
module_declaration: attribute_instance* module_keyword module_identifier module_parameter_port_list? list_of_ports? ";" module_item* "endmodule"
    | attribute_instance* module_keyword module_identifier module_parameter_port_list? list_of_port_declarations? ";" non_port_module_item* "endmodule"
module_keyword: "module" | "macromodule"

//A.1.4 Module parameters and ports
module_parameter_port_list: "#" "(" parameter_declaration ("," parameter_declaration)* ")"
list_of_ports: "(" port ("," port)* ")"
list_of_port_declarations: "(" port_declaration ("," port_declaration)* ")"
    | "(" ")"
port: port_expression?
    | "." port_identifier "(" port_expression? ")"
port_expressoin: port_reference
    | "{" port_reference ("," port_reference)* "}"
port_reference: port_identifier
    | port_identifier "[" constant_expression "]"
    | port_identifier "[" range_expression "]"
port_declaration: attribute_instance* inout_declaration
    | attribute_instance* input_declaration
    | attribute_instance* output_declaration

//A.1.5 Module items
module_item: module_or_generate_item
    | port_declaration ";"
//    | attribute_instance* generated_instantiation
//    | attribute_instance* local_parameter_declaration
//    | attribute_instance* parameter_declaration
//    | attribute_instance* specify_block
//    | attribute_instance* specparam_declaration
module_or_generate_item: attribute_instance* module_or_generate_item_declaration
//    | attribute_instance* parameter_override
    | attribute_instance* continuous_assign
//    | attribute_instance* gate_instantiation
//    | attribute_instance* udp_instantiation
    | attribute_instance* module_instantiation
    | attribute_instance* initial_construct
    | attribute_instance* always_construct
module_or_generate_item_declaration: net_declaration
    | reg_declaration
    | integer_declaration
//    | real_declaration
//    | time_declaration
//    | realtime_declaration
//    | event_declaration
//    | genvar_declaration
//    | task_declaration
//    | function_declaration
non_port_module_item: attribute_instance* generated_instantiation
    | attribute_instance* local_parameter_declaration
    | attribute_instance* module_or_generate_item
    | attribute_instance* parameter_declaration
    | attribute_instance* specify_block
    | attribute_instance* specparam_declaration
parameter_override: "defparam" list_of_param_assignments ";"

//A.2 Declarations
//A.2.1 Declaration types
local_parameter_declaration: "localparam" "signed"? "[" range "]" list_of_param_assignments ";"
    | "localparam" "integer" list_of_param_assignments ";"
    | "localparam" "real" list_of_param_assignments ";"
    | "localparam" "time" list_of_param_assignments ";"
parameter_declaration: "parameter" "signed"? "[" range "]" list_of_param_assignments ";"
    | "parameter" "integer" list_of_param_assignments ";"
    | "parameter" "real" list_of_param_assignments ";"
    | "parameter" "realtime" list_of_param_assignments ";"
    | "parameter" "time" list_of_param_assignments ";"
specparam_declaration: "specparam" "[" range "]" list_of_specparam_assignments ";"

//A.9 General
//A.9.1 Attributes
attribute_instance: "(*" attr_spec ("," attr_spec)* "*)"
attr_spec: attr_name "=" constant_expression
    | attr_name
attr_name: identifier

//A.9.3 Identifiers
escaper_identifier: ESCAPED_IDENTIFIER
identifier: simple_identifier
    | escaper_identifier
module_identifier: identifier
simple_identifier: CNAME

//LARK
ESCAPED_IDENTIFIER: /\\([^\s]+)/  
COMMENT: "//" /[^\n]*/ NEWLINE
NEWLINE: "\n"
MULTILINE_COMMENT: /\/\*(\*(?!\/)|[^*])*\*\//        

%import common.CNAME
%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.DECI
%import common.WS

%ignore WS
%ignore COMMENT
%ignore MULTILINE_COMMENT
%ignore NEWLINE